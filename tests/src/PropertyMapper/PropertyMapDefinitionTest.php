<?php

namespace TheSportsDb\Test\PropertyMapper;

use TheSportsDb\PropertyMapper\PropertyDefinition;
use TheSportsDb\PropertyMapper\PropertyMapDefinition;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-05 at 13:03:40.
 */
class PropertyMapDefinitionTest extends \PHPUnit_Framework_TestCase {

  /**
   * @var PropertyMapDefinition
   */
  protected $propertyMapDefinition;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->propertyMapDefinition = new PropertyMapDefinition();
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    $this->propertyMapDefinition = NULL;
  }

  /**
   * @covers TheSportsDb\PropertyMapper\PropertyMapDefinition::addPropertyMap
   */
  public function testAddPropertyMap() {
    $this->propertyMapDefinition->addPropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'));
    $this->assertEquals(1, count($this->propertyMapDefinition->getPropertyMaps()));
    $this->propertyMapDefinition->addPropertyMap(new PropertyDefinition('source2'), new PropertyDefinition('destination2'));
    $this->assertEquals(2, count($this->propertyMapDefinition->getPropertyMaps()));

  }

  /**
   * @covers TheSportsDb\PropertyMapper\PropertyMapDefinition::getPropertyMaps
   */
  public function testGetPropertyMaps() {
    $this->propertyMapDefinition->addPropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'));
    $this->assertEquals(1, count($this->propertyMapDefinition->getPropertyMaps()));
    $this->propertyMapDefinition->addPropertyMap(new PropertyDefinition('source2'), new PropertyDefinition('destination2'));
    $this->assertEquals(2, count($this->propertyMapDefinition->getPropertyMaps()));
    $this->assertEquals('source', $this->propertyMapDefinition->getPropertyMaps()[0]->getSource()->getName());
    $this->assertEquals('destination', $this->propertyMapDefinition->getPropertyMaps()[0]->getDestination()->getName());
    $this->assertEquals('source2', $this->propertyMapDefinition->getPropertyMaps()[1]->getSource()->getName());
    $this->assertEquals('destination2', $this->propertyMapDefinition->getPropertyMaps()[1]->getDestination()->getName());

  }

}
