<?php

namespace TheSportsDb\Test\PropertyMapper;

use TheSportsDb\PropertyMapper\PropertyDefinition;
use TheSportsDb\PropertyMapper\PropertyMap;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-05 at 13:12:58.
 */
class PropertyMapTest extends \PHPUnit_Framework_TestCase {

  /**
   * @var PropertyMap
   */
  protected $propertyMap;

  /**
   * @covers TheSportsDb\PropertyMapper\PropertyMap::__construct
   */
  public function testConstruct() {
    $this->expectException(\InvalidArgumentException::class);
    $this->expectExceptionMessage('Each transform function should have a reverse function and vice versa.');
    $propertyMap = new PropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'), 'intval');
  }

  /**
   * @covers TheSportsDb\PropertyMapper\PropertyMap::getSource
   */
  public function testGetSource() {
    $propertyMap = new PropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'));
    $this->assertInstanceOf(PropertyDefinition::class, $propertyMap->getSource());
    $this->assertEquals('source', $propertyMap->getSource()->getName());
  }

  /**
   * @covers TheSportsDb\PropertyMapper\PropertyMap::getDestination
   */
  public function testGetDestination() {
    $propertyMap = new PropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'));
    $this->assertInstanceOf(PropertyDefinition::class, $propertyMap->getDestination());
    $this->assertEquals('destination', $propertyMap->getDestination()->getName());
  }

  /**
   * @covers TheSportsDb\PropertyMapper\PropertyMap::getTransform
   */
  public function testGetTransform() {
    $propertyMap = new PropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'));
    $this->assertNull($propertyMap->getTransform());
    $propertyMap = new PropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'), 'intval', 'floatval');
    $this->assertEquals('intval', $propertyMap->getTransform());
  }

  /**
   * @covers TheSportsDb\PropertyMapper\PropertyMap::getReverse
   */
  public function testGetReverse() {
    $propertyMap = new PropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'));
    $this->assertNull($propertyMap->getTransform());
    $propertyMap = new PropertyMap(new PropertyDefinition('source'), new PropertyDefinition('destination'), 'intval', 'floatval');
    $this->assertEquals('floatval', $propertyMap->getReverse());
  }

}
